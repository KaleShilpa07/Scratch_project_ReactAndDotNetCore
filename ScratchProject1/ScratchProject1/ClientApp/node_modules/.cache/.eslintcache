[{"C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\index.js":"1","C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\App.js":"2","C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\components\\NavBar.js":"3","C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\components\\Navbar.js":"4","C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\components\\StudentCURD.js":"5","C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\components\\StudentCurd.js":"6","C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\components\\Routing.js":"7","C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\components\\ContactStudent.js":"8","C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\components\\Nav.js":"9","C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\components\\Email.js":"10"},{"size":215,"mtime":1706688945173,"results":"11","hashOfConfig":"12"},{"size":520,"mtime":1706688448113,"results":"13","hashOfConfig":"12"},{"size":2479,"mtime":1704879841212,"results":"14","hashOfConfig":"12"},{"size":2467,"mtime":1705302924769,"results":"15","hashOfConfig":"12"},{"size":1719,"mtime":1705303253674,"results":"16","hashOfConfig":"12"},{"size":46335,"mtime":1706687277549,"results":"17","hashOfConfig":"12"},{"size":715,"mtime":1706697670653,"results":"18","hashOfConfig":"12"},{"size":5560,"mtime":1706099115654,"results":"19","hashOfConfig":"12"},{"size":1084,"mtime":1706697625818,"results":"20","hashOfConfig":"12"},{"size":1928,"mtime":1706703554048,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hbxszv",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\index.js",[],[],"C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\App.js",[],[],"C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\components\\NavBar.js",["55"],[],"C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\components\\Navbar.js",["56"],[],"﻿\r\n\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nexport class Navbar extends Component {\r\n    // refreshPage=()=> {\r\n    //   window.location.reload(false);\r\n    // }\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <nav className=\"navbar fixed-top navbar-expand-lg  navbar-dark bg-dark\">\r\n                        <div className=\"container-fluid\">\r\n                            <Link className=\"navbar-brand\" to=\"/science\">News App</Link>\r\n                            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                <span className=\"navbar-toggler-icon\"></span>\r\n                            </button>\r\n                            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                                    <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/StudentCurd\">     Home     </Link></li>\r\n                                    <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/About\" >About</Link></li>\r\n                                    <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/Contact\" >      Contact      </Link></li>\r\n                                    <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/Products\">        Products        </Link></li>\r\n                                    <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/Images\" >       Images       </Link></li>\r\n                                    <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/Services\" >        Services        </Link></li>\r\n                                    <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/Information\">    Information     </Link></li>\r\n                                </ul>\r\n                                <Link className=\"btn btn-primary btn-sm mx-1\" to=\"/Login\" role=\"button\">Login</Link>\r\n                                <Link className=\"btn btn-primary btn-sm mx-1\" to=\"/SignUp\" role=\"button\">SignUp</Link>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n                </div></>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar",[],"C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\components\\StudentCURD.js",["57"],[],"C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\components\\StudentCurd.js",["58","59","60","61","62","63"],[],"﻿import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions,\r\n    IconButton,\r\n} from \"@mui/material\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport axios from \"axios\";\r\nimport { getData } from \"ajv/dist/compile/validate\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst StudentCurd = () => {\r\n    const [currentPhotoUrl, setCurrentPhotoUrl] = useState(\"\");\r\n    const [previewData, setPreviewData] = useState(false);\r\n\r\n    // Add a new state for storing the selected file\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n    // Handler for file input change\r\n    const handleFileChange = (e) => {\r\n        setSelectedFile(e.target.files[0]);\r\n\r\n    };\r\n    const handleEditFileChange = (e) => {\r\n        SetEditPhotoBase64();\r\n        setSelectedFile(e.target.files[0]);\r\n    };\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    const handleSearch = () => {\r\n        axios\r\n            .get(`https://localhost:7190/api/home/search?searchTerm=${searchTerm}`)\r\n            .then((result) => {\r\n                Setdata(result.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [deleteId, setDeleteId] = useState();\r\n\r\n    const handleClickOpen = (id) => {\r\n        setDeleteId(id);\r\n        setOpen(true);\r\n    };\r\n    const handleCloseDialog = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    //\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n    const handleEditModal = () => {\r\n        setShowEditModal(true);\r\n    };\r\n\r\n    const handleCloseEditModal = () => {\r\n        setShowEditModal(false);\r\n    };\r\n\r\n    //\r\n\r\n    const [showPreviewImage, setShowPreviewImage] = useState(false);\r\n    const handlePreviewModalImage = () => {\r\n        setShowPreviewImage(true);\r\n    };\r\n\r\n    const handleClosePreviewModalImage = () => {\r\n        setShowPreviewImage(false);\r\n    };\r\n    const [showPreviewModal, setShowPreviewModal] = useState(false);\r\n    const handlePreviewModal = () => {\r\n        setShowPreviewModal(true);\r\n    };\r\n\r\n    const handleClosePreviewModal = () => {\r\n        setShowPreviewModal(false);\r\n    };\r\n    //\r\n    //Delete Data\r\n\r\n\r\n    const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n    const handleDeleteSelectedRows = async () => {\r\n        try {\r\n            await axios.delete('https://localhost:7190/api/home/deleteMultiple', {\r\n                data: selectedRows\r\n            });\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n            }, 5000);\r\n            // Handle success\r\n            toast.success(\"Data deleted successfully\", { position: \"top-center\" });\r\n\r\n            // Handle additional logic (e.g., update UI or fetch updated data)\r\n        } catch (error) {\r\n            // Handle error\r\n\r\n            // Display an error toast\r\n            toast.error(\"Please Select Row..\", { position: \"top-center\" });\r\n        }\r\n    };\r\n\r\n\r\n    //\r\n    const HandleDelete = (id) => {\r\n        handleClickOpen(id);\r\n    };\r\n    const confirmDelete = () => {\r\n        axios\r\n            .delete(`https://localhost:7190/api/home/${deleteId}`)\r\n            .then((result) => {\r\n                if (result.status === 200) {\r\n                    toast.success(\"Student Delete SuccessFully..\", { position: \"top-center\" });\r\n                }\r\n                handleCloseDialog(); // Close the confirmation dialog\r\n            })\r\n            .catch((error) => {\r\n                toast.error(error, { position: \"top-center\" });\r\n                handleCloseDialog(); // Close the confirmation dialog\r\n            });\r\n    };\r\n\r\n    const [data, Setdata] = useState([]);\r\n\r\n    const [Name, SetName] = useState(\"\");\r\n    const [IsActive, SetIsActive] = useState(\"\");\r\n\r\n    const [Age, SetAge] = useState(\"\");\r\n    const [City, SetCity] = useState(\"\");\r\n    const [Standard, SetStandard] = useState(\"\");\r\n    const [DOB, SetDOB] = useState(\"\");\r\n    const [Gender, SetGender] = useState(\"\");\r\n    const [MobileNo, SetMobileNo] = useState(\"\");\r\n    const [EmailId, SetEmailId] = useState(\"\");\r\n\r\n    const [Editid, SetEditid] = useState(\"\");\r\n    const [Editname, SetEditName] = useState(\"\");\r\n    const [EditAge, SetEditAge] = useState(\"\");\r\n    const [EditCity, SetEditCity] = useState(\"\");\r\n    const [EditStandard, SetEditStandard] = useState(\"\");\r\n    const [EditPhotoBase64, SetEditPhotoBase64] = useState(\"\");\r\n    const [EditDOB, SetEditDOB] = useState(new Date()); // Initial value, you can replace it with your actual initial value\r\n\r\n    const [EditGender, SetEditGender] = useState(\"\");\r\n    const [EditIsActive, SetEditIsActive] = useState(\"\");\r\n    const [EditMobileNo, SetEditMobileNo] = useState(\"\");\r\n    const [EditEmailId, SetEditEmailId] = useState(\"\");\r\n\r\n\r\n    //Insert dummy data into table...\r\n    // const rows = [\r\n    //   {\r\n    //     id: 1,\r\n    //     Name: \"Swara\",\r\n    //     age: 23,\r\n    //     Address: \"pune\",\r\n    //     Class: \"second\",\r\n\r\n    //   },\r\n    //   {\r\n    //     id: 2,\r\n    //     Name: \"Sunita\",\r\n    //     age: 23,\r\n    //     Address: \"pune\",\r\n    //     Class: \"second\",\r\n\r\n    //   },\r\n    //   {\r\n    //     id: 3,\r\n    //     Name: \"Mira\",\r\n    //     age: 23,\r\n    //     Address: \"pune\",\r\n    //     Class: \"second\",\r\n\r\n    //   },\r\n    // ];\r\n\r\n    const refreshPage = () => {\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 5000);\r\n    };\r\n    // Function to convert a file to base64\r\n    const getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n\r\n            reader.onload = () => {\r\n                resolve(reader.result.split(\",\")[1]); // Extract base64 part\r\n            };\r\n\r\n            reader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    //Save Data\r\n    const HandleSave = async () => {\r\n        const url1 = \"https://localhost:7190/api/home\";\r\n        const formData = {\r\n            Name: Name,\r\n            Age: Age,\r\n            DOB: DOB,\r\n            Gender: Gender,\r\n            City: City,\r\n            EmailId: EmailId,\r\n            MobileNo: MobileNo,\r\n            isActive: IsActive,\r\n            Standard: Standard,\r\n            photo: selectedFile ? await getBase64(selectedFile) : null,\r\n        };\r\n\r\n        axios\r\n            .post(url1, formData)\r\n            .then((result) => {\r\n                getData();\r\n                Clear();\r\n                toast.error(\"Error adding student\", { position: \"top-center\" });\r\n            })\r\n            .catch(() => {\r\n                console.error();\r\n                toast.success(\"Student Add Successfully..\", { position: \"top-center\" });\r\n            });\r\n    };\r\n    const Clear = () => {\r\n        SetName(\"\");\r\n        SetCity(\"\");\r\n        SetAge(\"\");\r\n        SetDOB(\"\");\r\n        SetGender(\"\");\r\n        SetMobileNo(\"\");\r\n        SetEmailId(\"\");\r\n        SetStandard(\"\");\r\n        SetIsActive(\"\");\r\n        EditPhotoBase64(\"\");\r\n        SetEditCity(\"\");\r\n        SetEditid(\"\");\r\n        SetEditName(\"\");\r\n        SetEditAge(\"\");\r\n        SetEditDOB(\"\");\r\n        SetEditMobileNo(\"\");\r\n        SetEditEmailId(\"\");\r\n        SetEditGender(\"\");\r\n        SetEditIsActive(\"\");\r\n        SetEditStandard(\"\");\r\n        SetEditPhotoBase64(\"\");\r\n    };\r\n    const handleUpdate = async (id) => {\r\n        const updatedData = {\r\n            id: Editid,\r\n            Name: Editname,\r\n            Age: EditAge,\r\n            City: EditCity,\r\n            Standard: EditStandard,\r\n            DOB: EditDOB,\r\n            EmailId: EditEmailId,\r\n            MobileNo: EditMobileNo,\r\n            Gender: EditGender,\r\n            IsActive: EditIsActive,\r\n\r\n            //Photo: currentPhotoUrl.split(',')[1], // Extract base64 part\r\n            PhotoBase64: currentPhotoUrl ? await getBase64(selectedFile) : null,\r\n        };\r\n\r\n        axios\r\n            .put(`https://localhost:7190/api/home/${id}`, updatedData)\r\n            .then((response) => {\r\n                toast.success(\"Data updated successfully\", { position: \"top-center\" });\r\n                // Close the modal after successful update\r\n                refreshPage();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error, { position: \"top-center\" });\r\n                toast.error(\"Error updating data\", { position: \"top-center\" });\r\n            });\r\n    };\r\n    const HandleEdit = (id) => {\r\n        handleEditModal();\r\n        axios\r\n            .get(`https://localhost:7190/api/home/${id}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n            .then((result) => {\r\n                SetEditPhotoBase64(result.data.PhotoBase64);\r\n                SetEditName(result.data.name);\r\n                SetEditAge(result.data.age);\r\n                SetEditCity(result.data.city);\r\n                SetEditStandard(result.data.standard);\r\n                SetEditDOB(result.data.dob);\r\n                SetEditEmailId(result.data.emailId);\r\n                SetEditMobileNo(result.data.mobileNo);\r\n                SetEditGender(result.data.gender);\r\n                SetEditIsActive(result.data.isActive);\r\n                setCurrentPhotoUrl(`data:image/png;base64,${result.data.photo}`);\r\n                SetEditid(id);\r\n                setShowEditModal(true); // You might need this line if you want to ensure the modal is visible after fetching data\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                toast.error(\"Error fetching student data for edit\", { position: \"top-center\" });\r\n            });\r\n    };\r\n    // const HandleDelete = (id) => {\r\n    //   if (window.confirm(\"Are You sure to delete Student...\") === true) {\r\n    //     axios\r\n    //       .delete(`https://localhost:7190/api/home/${id}`)\r\n    //       .then((result) => {\r\n    //         if (result.status === 200) {\r\n    //           toast.success(\"Student Delete SuccessFully..\");\r\n    //           refreshPage();\r\n    //         }\r\n    //       })\r\n    //       .catch((error) => {\r\n    //         toast.error(error);\r\n    //       });\r\n    //   }\r\n    // };\r\n\r\n\r\n    const HandlePreview = (id) => {\r\n        handlePreviewModal();\r\n\r\n\r\n        axios\r\n            .get(`https://localhost:7190/api/home/${id}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n            .then((result) => {\r\n                setPreviewData(result.data);\r\n                // Open the preview modal\r\n                setShowPreviewModal(true);\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                toast.error(\"Error fetching student data for preview\", { position: \"top-center\" });\r\n            });\r\n    };\r\n    const HandlePreview2 = (id) => {\r\n\r\n        handlePreviewModalImage();\r\n\r\n        axios\r\n            .get(`https://localhost:7190/api/home/${id}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n            .then((result) => {\r\n                setPreviewData(result.data);\r\n                // Open the preview modal\r\n\r\n                setShowPreviewImage(true);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                toast.error(\"Error fetching student data for preview\", { position: \"top-center\" });\r\n            });\r\n    };\r\n\r\n    const [showAddModal, setAddShowModal] = useState(false);\r\n\r\n    const handleAddShowModal = () => {\r\n        setAddShowModal(true);\r\n    };\r\n\r\n    const handleAddCloseModal = () => {\r\n        setAddShowModal(false);\r\n    };\r\n\r\n    const handleIsActiveChange = (itemId) => {\r\n        Setdata((prevData) =>\r\n            prevData.map((item) =>\r\n                item.id === itemId ? { ...item, isActive: !item.isActive } : item\r\n            )\r\n        );\r\n        const checkbox = document.getElementById(`checkbox_${itemId}`);\r\n        if (checkbox) {\r\n            checkbox.classList.toggle('Red');\r\n        }\r\n    };\r\n    // Disable all checkboxes by default\r\n    const [checkboxesDisabled, setCheckboxesDisabled] = useState(true);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        Getdata();\r\n    }, [searchTerm]);\r\n\r\n    const Getdata = () => {\r\n        axios\r\n            .get(\"https://localhost:7190/api/home\")\r\n            .then((result) => {\r\n                /* Setdata(result.data);*/\r\n                Setdata(\r\n                    result.data.map((item) => ({\r\n                        ...item,\r\n                        photoBase64: item.PhotoBase64,\r\n                    }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <br></br>\r\n            <ToastContainer />\r\n\r\n            <Container>\r\n                <Row>\r\n                    <Col\r\n                        lg={4}\r\n                        md={8}\r\n                        style={{ position: \"fixed\", width: \"20%\", marginLeft: \"860px\" }}\r\n                    >\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search here..\"\r\n                            aria-label=\"Search\"\r\n                            value={searchTerm}\r\n                            onChange={(e) => setSearchTerm(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                    <Col\r\n                        lg={2}\r\n                        md={10}\r\n                        style={{ position: \"fixed\", width: \"20%\", marginLeft: \"1125px\" }}\r\n                    >\r\n                        <button\r\n                            className=\"btn btn-outline-success\"\r\n                            type=\"submit\"\r\n                            onClick={handleSearch}\r\n                        >\r\n                            Search\r\n                        </button>&nbsp;\r\n                        <button className=\"btn btn-outline-danger\"\r\n\r\n                            onClick={handleDeleteSelectedRows}>DeleteAll</button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Row>\r\n                {\" \"}\r\n                <div>\r\n                    {\" \"}\r\n                    <IconButton\r\n                        color=\"btn btn-outline-Success\"\r\n                        style={{ color: \"green\" }}\r\n                        onClick={handleAddShowModal}\r\n                    >\r\n                        <AddCircleOutlineIcon />\r\n                        Add\r\n                    </IconButton>{\" \"}\r\n                </div>\r\n            </Row>\r\n            <br></br>\r\n\r\n            <Modal show={showAddModal} onHide={handleAddCloseModal} size=\"lg\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add New Student</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row>\r\n                        <Col xs={12} md={6}>\r\n                            <Form.Group>\r\n                                <Form.Label></Form.Label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Name\"\r\n                                    value={Name}\r\n                                    onChange={(e) => SetName(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col xs={12} md={6}>\r\n                            <Form.Group>\r\n                                <Form.Label> </Form.Label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Mobile No\"\r\n                                    value={MobileNo}\r\n                                    onChange={(e) => SetMobileNo(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col xs={12} md={6}>\r\n                            <Form.Group>\r\n                                <Form.Label></Form.Label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Age\"\r\n                                    value={Age}\r\n                                    onChange={(e) => SetAge(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                        </Col>\r\n                        <Col xs={12} md={6}>\r\n                            <Form.Group>\r\n                                <Form.Label></Form.Label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Standard\"\r\n                                    value={Standard}\r\n                                    onChange={(e) => SetStandard(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n\r\n                    <Row>\r\n                        <Col xs={12} md={6}>\r\n                            <Form.Group>\r\n                                <Form.Label></Form.Label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"City\"\r\n                                    value={City}\r\n                                    onChange={(e) => SetCity(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col xs={12} md={6}>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label></Form.Label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Email Id\"\r\n                                    value={EmailId}\r\n                                    onChange={(e) => SetEmailId(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <br></br>\r\n                    <Row>\r\n\r\n                        <Col xs={12} md={6}>\r\n                            <Form.Group>\r\n                                <div>\r\n                                    <label>Gender &nbsp;:&nbsp;&nbsp;\r\n\r\n                                        <Form.Check\r\n                                            inline\r\n                                            value={Gender}\r\n                                            label=\"Male\"\r\n                                            type=\"radio\"\r\n                                            id=\"maleRadio\"\r\n                                            name=\"genderRadio\"\r\n                                            checked={Gender === \"Male\" || Gender === \"male\"}\r\n                                            onChange={() => SetGender(\"Male\")}\r\n                                        />\r\n                                        <Form.Check\r\n                                            inline\r\n                                            value={Gender}\r\n                                            label=\"Female\"\r\n                                            type=\"radio\"\r\n                                            id=\"femaleRadio\"\r\n                                            name=\"genderRadio\"\r\n                                            checked={Gender === \"Female\" || Gender === \"female\"}\r\n                                            onChange={() => SetGender(\"Female\")}\r\n                                        />\r\n\r\n                                    </label>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n\r\n                        <Col xs={12} md={6}>\r\n                            <Form.Group>\r\n                                <label>IsActive &nbsp;:&nbsp;&nbsp;\r\n                                    <Form.Check\r\n                                        inline\r\n                                        label=\"Yes\"\r\n                                        type=\"radio\"\r\n                                        id=\"yesRadio\"\r\n                                        name=\"isActiveRadio\"\r\n                                        checked={IsActive === true}\r\n                                        style={{ color: IsActive ? 'green' : 'black', cursor: 'pointer' }}\r\n                                        onChange={() => SetIsActive(true)}\r\n                                    />\r\n                                    <Form.Check\r\n                                        inline\r\n                                        label=\"No\"\r\n                                        type=\"radio\"\r\n                                        id=\"noRadio\"\r\n                                        name=\"isActiveRadio\"\r\n                                        checked={IsActive === false}\r\n                                        style={{ color: IsActive ? 'red' : 'black', cursor: 'pointer' }}\r\n\r\n                                        onChange={() => SetIsActive(false)}\r\n                                    />\r\n                                </label>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={4} style={{ marginTop: \"24px\", width: \"260px\" }}>\r\n                            <Form.Group>\r\n                                <Form.Label> </Form.Label>\r\n                                <DatePicker\r\n                                    selected={DOB ? new Date(DOB) : null}\r\n                                    onChange={(date) => SetDOB(date)}\r\n                                    className=\"form-control\"\r\n                                    placeholderText=\"Date of Birth\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Col></Row>\r\n                    <Row>\r\n                        <Col xs={12} md={6} style={{ marginTop: \"30px\" }}>\r\n                            <Form.Group>\r\n                                <Form.Label></Form.Label>\r\n                                <input type=\"file\" onChange={(e) => handleFileChange(e)} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleAddCloseModal}>\r\n                        Close\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"success\"\r\n                        onClick={() => {\r\n                            HandleSave();\r\n                            refreshPage();\r\n                            handleAddCloseModal();\r\n                        }}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Table\r\n                striped\r\n                bordered\r\n                style={{\r\n                    marginRight: \"40px\",\r\n                    top: \"100px\",\r\n                    overflowX: \"auto\", // Add this line for horizontal scrollbar\r\n                    maxWidth: \"100%\", // Ensure the table takes the full width\r\n                }}\r\n            >\r\n                <thead>\r\n                    <tr style={{ textAlign: \"center\" }}>\r\n                        {/* <th>No</th>*/}\r\n                        <th>SelectRow</th>\r\n                        <th>Name</th>\r\n                        <th>Date-Of-Birth</th>\r\n                        <th>Age</th>\r\n                        <th>Gender</th>\r\n                        <th>Email Id</th>\r\n                        <th>City</th>\r\n                        <th>Standard</th>\r\n                        <th>Mobile No</th>\r\n                        <th>Photo</th>\r\n                        <th>IsActive</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data && data.length > 0\r\n                        ? data.map((item, index) => {\r\n                            return (\r\n                                <>\r\n                                    <tr key={index} style={{ textAlign: \"center\" }}>\r\n                                        {/*  <td>{index + 1}</td>*/}\r\n                                        <td>\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                value={item.id}\r\n                                                onChange={(e) => {\r\n                                                    const itemId = parseInt(e.target.value, 10);\r\n                                                    setSelectedRows(prev => (\r\n                                                        e.target.checked\r\n                                                            ? [...prev, itemId]\r\n                                                            : prev.filter(id => id !== itemId)\r\n                                                    ));\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                        </td>\r\n                                        <td>{item.name}</td>\r\n                                        <td>\r\n                                            {item.dob\r\n                                                ? new Date(item.dob).toLocaleDateString()\r\n                                                : \"N/A\"}\r\n                                        </td>\r\n                                        <td>{item.age}</td>\r\n                                        <td>{item.gender}</td>\r\n                                        <td>{item.emailId}</td>\r\n                                        <td>{item.city}</td>\r\n                                        <td>{item.standard}</td>\r\n                                        <td>{item.mobileNo}</td>\r\n                                        <td>\r\n                                            <div\r\n                                                style={{\r\n                                                    textAlign: \"center\",\r\n                                                    maxWidth: \"50px\",\r\n                                                    maxHeight: \"50px\",\r\n                                                    overflow: \"hidden\",\r\n                                                }}\r\n                                            >\r\n                                                {item.photo !== null ? (\r\n                                                    <img\r\n                                                        style={{\r\n                                                            width: \"100%\",\r\n                                                            height: \"100%\",\r\n                                                            objectFit: \"cover\",\r\n                                                        }}\r\n                                                        src={`data:image/png;base64,${item.photo}`}\r\n                                                        alt={`${item.name}`}\r\n                                                        onClick={() => HandlePreview2(item.id)}\r\n                                                    />\r\n                                                ) : (\r\n                                                    \"..\"\r\n                                                )}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td className=\"text-center\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                defaultChecked={item.isActive}\r\n                                                onChange={() => handleIsActiveChange(item.id)}\r\n                                                disabled={checkboxesDisabled}\r\n                                                id={`checkbox_${item.id}`}\r\n                                            /></td>\r\n                                        <td colSpan={2}>\r\n                                            <EditIcon\r\n                                                style={{ cursor: \"pointer\", color: \"blue\" }} // Set color or other styles as needed\r\n                                                onClick={() => HandleEdit(item.id)}\r\n                                            ></EditIcon>\r\n                                            &nbsp;\r\n                                            <VisibilityIcon\r\n                                                onClick={() => HandlePreview(item.id)}\r\n                                                style={{ cursor: \"pointer\" }}\r\n                                            />\r\n                                            &nbsp;\r\n                                            <DeleteIcon\r\n                                                onClick={() => {\r\n                                                    HandleDelete(item.id);\r\n                                                }}\r\n                                                style={{ cursor: \"pointer\", color: \"red\" }} // Customize the color\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                </>\r\n                            );\r\n                        })\r\n                        : \"... No data here \"}\r\n                </tbody>\r\n            </Table>\r\n\r\n\r\n\r\n            <Dialog open={open} onClose={handleCloseDialog}>\r\n                <DialogTitle>Confirmation</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Are you sure you want to delete this student?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n\r\n                    <Button onClick={handleCloseDialog} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            confirmDelete();\r\n                            refreshPage();\r\n                        }}\r\n                        variant=\"danger\"\r\n                    >\r\n                        Confirm\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <div style={{\r\n                position: \"fixed\",\r\n                origin: \"50%\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                transform: \"translate(-50%, -50%)\",\r\n            }}>\r\n                {\" \"}\r\n                <Modal\r\n                    show={showPreviewModal}\r\n                    onHide={handleClosePreviewModal}\r\n                    animation={true}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Student Preview</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {previewData && (\r\n                            <div>\r\n                                <p>Name: {previewData.name}</p>\r\n                                <p>DOB: {previewData.dob}</p>\r\n                                <p>Age: {previewData.age}</p>\r\n                                <p>Gender: {previewData.gender}</p>\r\n                                <p>Email Id: {previewData.emailId}</p>\r\n                                <p>City: {previewData.city}</p>\r\n                                <p>Standard: {previewData.standard}</p>\r\n                                <p>Mobile No: {previewData.mobileNo}</p>\r\n\r\n\r\n                                {previewData.photo && (\r\n                                    <img\r\n                                        src={`data:image/png;base64,${previewData.photo}`}\r\n                                        alt={`Photo of ${previewData.name}`}\r\n                                        style={{ maxWidth: \"100%\", maxHeight: \"400px\" }}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </Modal.Body>\r\n                </Modal>{\" \"}\r\n            </div>\r\n            <div>\r\n                <Modal\r\n                    show={showPreviewImage}\r\n                    onHide={handleClosePreviewModalImage}\r\n                    animation={true}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <marquee> <Modal.Title> {previewData && (\r\n\r\n                            <h >{previewData.name}'s Photo and MobileNo: {previewData.mobileNo} </h>)}\r\n                        </Modal.Title></marquee>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {previewData && (\r\n                            <div >\r\n                                {previewData.photo && (\r\n                                    <img\r\n                                        src={`data:image/png;base64,${previewData.photo}`}\r\n                                        alt={`Photo of ${previewData.name}`}\r\n                                        style={{ maxWidth: \"100%\", maxHeight: \"600px\" }}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </Modal.Body>\r\n                </Modal>{\" \"}\r\n            </div>\r\n            <div>\r\n                <Modal\r\n                    show={showEditModal}\r\n                    onHide={handleCloseEditModal}\r\n                    animation={true}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Update/Edit Student</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Row>\r\n                            <Col xs={12} md={6}>\r\n                                <Form.Group>\r\n                                    <Form.Label></Form.Label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Edit Name\"\r\n                                        value={Editname}\r\n                                        onChange={(e) => SetEditName(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <Form.Group>\r\n                                    <Form.Label> </Form.Label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Edit Mobile No\"\r\n                                        value={EditMobileNo}\r\n                                        onChange={(e) => SetEditMobileNo(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col xs={12} md={6}>\r\n                                <Form.Group>\r\n                                    <Form.Label></Form.Label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Edit Age\"\r\n                                        value={EditAge}\r\n                                        onChange={(e) => SetEditAge(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <Form.Group>\r\n                                    <Form.Label></Form.Label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Edit Standard\"\r\n                                        value={EditStandard}\r\n                                        onChange={(e) => SetEditStandard(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col xs={12} md={6}>\r\n                                <Form.Group>\r\n                                    <Form.Label></Form.Label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Edit Email Id\"\r\n                                        value={EditEmailId}\r\n                                        onChange={(e) => SetEditEmailId(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <Form.Group>\r\n                                    <Form.Label></Form.Label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Edit City\"\r\n                                        value={EditCity}\r\n                                        onChange={(e) => SetEditCity(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={4} style={{ marginTop: \"24px\", width: \"265px\" }} >\r\n                                <Form.Group>\r\n                                    <div>\r\n                                        <label>Gender &nbsp;:&nbsp;&nbsp;\r\n\r\n                                            <Form.Check\r\n                                                inline\r\n                                                value={EditGender}\r\n                                                label=\"Male\"\r\n\r\n                                                id=\"maleRadio\"\r\n                                                name=\"genderRadio\"\r\n                                                type=\"radio\"\r\n                                                checked={EditGender === \"Male\" || EditGender === \"male\"}\r\n                                                onChange={() => SetEditGender(\"Male\")}\r\n                                            />\r\n                                            <Form.Check\r\n                                                inline\r\n                                                value={EditGender}\r\n                                                label=\"Female\"\r\n\r\n                                                id=\"femaleRadio\"\r\n                                                name=\"genderRadio\"\r\n                                                type=\"radio\"\r\n                                                checked={EditGender === \"Female\" || EditGender === \"female\"}\r\n                                                onChange={() => SetEditGender(\"Female\")}\r\n                                            />\r\n                                        </label>\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col xs={12} md={4} style={{ marginTop: \"24px\", width: \"225px\", marginLeft: \"0px\" }} >\r\n                                <Form.Group>\r\n                                    <label>IsActive &nbsp;:&nbsp;&nbsp;\r\n\r\n                                        <Form.Check\r\n                                            inline\r\n                                            label=\"Yes\"\r\n                                            type=\"radio\"\r\n                                            id=\"yesRadio\"\r\n                                            name=\"isActiveRadio\"\r\n                                            checked={EditIsActive === true}\r\n                                            style={{ color: EditIsActive ? 'green' : 'black', cursor: 'pointer' }}\r\n                                            onChange={() => SetEditIsActive(true)}\r\n                                        />\r\n                                        <Form.Check\r\n                                            inline\r\n                                            label=\"No\"\r\n                                            type=\"radio\"\r\n                                            id=\"noRadio\"\r\n                                            name=\"isActiveRadio\"\r\n                                            checked={EditIsActive === false}\r\n                                            style={{ color: EditIsActive ? 'red' : 'black', cursor: 'pointer' }}\r\n                                            onChange={() => SetEditIsActive(false)}\r\n                                        />\r\n\r\n\r\n                                    </label>\r\n                                </Form.Group>\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row> <Col xs={12} md={6} style={{ marginTop: \"24px\", width: \"220px\" }}>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label> </Form.Label>\r\n                                <DatePicker\r\n                                    selected={EditDOB ? new Date(EditDOB) : null}\r\n                                    onChange={(date) => SetEditDOB(date)}\r\n                                    className=\"form-control\"\r\n                                    placeholderText={\r\n                                        EditDOB\r\n                                            ? new Date(EditDOB).toLocaleDateString()\r\n                                            : \"Select DOB\"\r\n                                    }\r\n                                />\r\n                            </Form.Group>\r\n                        </Col></Row>\r\n                        <br></br>\r\n\r\n                        <Row>\r\n                            {/* Display the current photo */}\r\n                            {currentPhotoUrl && (\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Group>\r\n                                        <Form.Label></Form.Label>\r\n                                        <img\r\n                                            src={currentPhotoUrl}\r\n                                            alt=\"Current Photo\"\r\n                                            style={{ maxWidth: \"100%\", maxHeight: \"200px\" }}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            )}\r\n                            {/* File Input */}\r\n                            <Col xs={12} md={6} style={{ marginTop: \"30px\" }}>\r\n                                <Form.Group>\r\n                                    <Form.Label></Form.Label>\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        onChange={(e) => handleEditFileChange(e)}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleCloseEditModal}>\r\n                            Close\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            onClick={() => {\r\n                                handleUpdate(Editid);\r\n                            }}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default StudentCurd;\r\n","C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\components\\Routing.js",["64"],[],"C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\components\\ContactStudent.js",["65"],[],"C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\components\\Nav.js",["66"],[],"C:\\Users\\NTS-Shilpa Kale\\source\\repos\\Scratch_project_ReactAndDotNetCore\\ScratchProject1\\ScratchProject1\\ClientApp\\src\\components\\Email.js",["67"],[],{"ruleId":"68","severity":1,"message":"69","line":1,"column":1,"nodeType":"70","messageId":"71","fix":"72"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":1,"nodeType":"70","messageId":"71","fix":"73"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":1,"nodeType":"70","messageId":"71","fix":"74"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":1,"nodeType":"70","messageId":"71","fix":"75"},{"ruleId":"76","severity":1,"message":"77","line":408,"column":32,"nodeType":"78","messageId":"79","endLine":408,"endColumn":53},{"ruleId":"80","severity":1,"message":"81","line":854,"column":37,"nodeType":"82","endLine":858,"endColumn":39},{"ruleId":"83","severity":1,"message":"84","line":872,"column":25,"nodeType":"82","endLine":872,"endColumn":34},{"ruleId":"80","severity":1,"message":"81","line":881,"column":37,"nodeType":"82","endLine":885,"endColumn":39},{"ruleId":"80","severity":1,"message":"81","line":1071,"column":41,"nodeType":"82","endLine":1075,"endColumn":43},{"ruleId":"68","severity":1,"message":"69","line":1,"column":1,"nodeType":"70","messageId":"71","fix":"85"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":1,"nodeType":"70","messageId":"71","fix":"86"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":1,"nodeType":"70","messageId":"71","fix":"87"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":1,"nodeType":"70","messageId":"71","fix":"88"},"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"89","text":"90"},{"range":"91","text":"90"},{"range":"92","text":"90"},{"range":"93","text":"90"},"no-unused-vars","'setCheckboxesDisabled' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.",{"range":"94","text":"90"},{"range":"95","text":"90"},{"range":"96","text":"90"},{"range":"97","text":"90"},[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0]]